version: '3.8'

services:
  # Main API service
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./mlruns:/app/mlruns
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Streamlit dashboard
  dashboard:
    build: .
    command: ["streamlit", "run", "src/dashboard/streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app/src
      - API_BASE_URL=http://api:8000
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - api
    restart: unless-stopped

  # MLflow tracking server
  mlflow:
    build: .
    command: ["mlflow", "server", "--host", "0.0.0.0", "--port", "5000", "--backend-store-uri", "file:///app/mlruns"]
    ports:
      - "5000:5000"
    environment:
      - PYTHONPATH=/app/src
    volumes:
      - ./mlruns:/app/mlruns
    restart: unless-stopped

  # Monitoring service (runs periodically)
  monitoring:
    build: .
    command: ["python", "scripts/run_monitoring.py"]
    environment:
      - PYTHONPATH=/app/src
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - api
    restart: "no"  # Run once, don't restart
    profiles:
      - monitoring  # Only start with specific profile

  # Training service (for retraining)
  training:
    build: .
    command: ["dvc", "repro"]
    environment:
      - PYTHONPATH=/app/src
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./mlruns:/app/mlruns
    restart: "no"  # Run once, don't restart
    profiles:
      - training  # Only start with specific profile

  # Database (optional - for production use)
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: caresight
      POSTGRES_USER: caresight
      POSTGRES_PASSWORD: caresight_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    profiles:
      - database  # Only start with specific profile

  # Redis (optional - for caching)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    profiles:
      - cache  # Only start with specific profile

  # Nginx (optional - for production load balancing)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - dashboard
    restart: unless-stopped
    profiles:
      - production  # Only start with specific profile

volumes:
  postgres_data:

networks:
  default:
    name: caresight-network
